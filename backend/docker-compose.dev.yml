version: '3.8'
services:
  postgres:
    image: postgres:16
    container_name: study_pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: studyroom
    ports: ['5432:5432']
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d studyroom']
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: study_redis
    command: ['redis-server', '--appendonly', 'yes']
    ports: ['6379:6379']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data

  api:
    build:
      context: .
      target: dev
    container_name: study_api_dev
    env_file: .docker.env
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "node wait-for.js && npx prisma generate && npx prisma migrate dev --name init || true && npm run start:dev"

volumes:
  pg_data:
  redis_data:
